{"version":3,"file":"contract.js","sources":["../src/helpers.js","../node_modules/near-sdk-js/src/near-bindgen.js","../node_modules/near-sdk-js/src/near-contract.js","../node_modules/near-sdk-js/src/api.js","../src/index.js"],"sourcesContent":["export function assert(condition, message) {\r\n  if (!condition) {\r\n    throw new Error(message);\r\n  }\r\n}\r\n","export function call (target, name, descriptor) {\n    return descriptor\n}\n\nexport function view (target, name, descriptor) {\n    return descriptor\n}\n\nexport function NearBindgen (Class) {\n    let OriginalClass = Class\n    let NewClass = function() {\n        let args = OriginalClass.deserializeArgs()\n        let ret = new OriginalClass(...args)\n        ret.serialize()\n        return ret\n    }\n    NewClass.prototype = OriginalClass.prototype\n    NewClass._get = function() {\n        let ret = Object.create(NewClass.prototype)\n        return ret\n    }\n\n    return NewClass\n}\n","export class NearContract {\n    deserialize() {\n        let hasRead = env.jsvm_storage_read('STATE', 0)\n        if (hasRead != 0) {\n            let state = env.read_register(0)\n            Object.assign(this, JSON.parse(state))\n        } else\n            throw new Error('Contract state is empty')\n    }\n\n    serialize() {\n        env.jsvm_storage_write('STATE', JSON.stringify(this), 0)\n    }\n\n    static deserializeArgs() {\n        env.jsvm_args(0)\n        let args = env.read_register(0)\n        return JSON.parse(args || '[]')\n    }\n\n    static serializeReturn(ret) {\n        return JSON.stringify(ret)\n    }\n}\n","const U64_MAX = 2n**64n - 1n\nconst EVICTED_REGISTER = U64_MAX - 1n\n\nexport function signerAccountId() {\n    env.signer_account_id(0)\n    return env.read_register(0)\n}\n\nexport function signerAccountPk() {\n    env.signer_account_pk(0)\n    return env.read_register(0)\n}\n\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0)\n    return env.read_register(0)\n}\n\nexport function randomSeed() {\n    env.random_seed(0)\n    return env.read_register(0)\n}\n\nexport function sha256(value) {\n    env.sha256(value, 0)\n    return env.read_register(0)\n}\n\nexport function keccak256(value) {\n    env.keccak256(value, 0)\n    return env.read_register(0)\n}\n\nexport function keccak512(value) {\n    env.keccak512(value, 0)\n    return env.read_register(0)\n}\n\nexport function ripemd160(value) {\n    env.ripemd160(value, 0)\n    return env.read_register(0)\n}\n\nexport function ecrecover(hash, sign, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sign, v, malleabilityFlag, 0)\n    if (ret === 0n) {\n        return null\n    }\n    return env.read_register(0)\n}\n\n// TODO: env.promise_result returns need additioonal handling\n\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0)\n    if (ret === 1n) {\n        return env.read_register(0)\n    } else {\n        return null\n    }\n}\n\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0)\n    return env.read_register(0)\n}\n\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0)\n    return env.read_register(0)\n}\n\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0)\n    return env.read_register(0)\n}\n\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0)\n    return env.read_register(0)\n}\n\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0)\n    return env.read_register(0)\n}\n\nexport function jsvmArgs() {\n    env.jsvm_args(0)\n    return env.read_register(0)\n}\n\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER)\n    if (exist === 1n) {\n        return true\n    }\n    return false\n}\n\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0)\n    if (exist === 1n) {\n        return env.read_register(0)\n    }\n    return null\n}\n\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER)\n    if (exist === 1n) {\n        return true\n    }\n    return false\n}\n\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key)\n    if (exist === 1n) {\n        return true\n    }\n    return false\n}\n\nexport function jsvmCall(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0)\n    return JSON.parse(env.read_register(0) || 'null')\n}\n\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER)\n}","import { assert } from \"./helpers\";\r\n\r\nimport {\r\n  NearContract,\r\n  NearBindgen,\r\n  call,\r\n  view,\r\n  near,\r\n  UnorderedMap,\r\n  Vector,\r\n} from \"near-sdk-js\";\r\n\r\nconst AUTHORIZED_CONTRACT = \"coingecko-feed.idea404.testnet\";\r\n\r\n@NearBindgen\r\nclass Contract extends NearContract {\r\n  constructor() {\r\n    super();\r\n    this.near_prices = new Map();\r\n  }\r\n\r\n  /**\r\n   * Adds price data to smart contract.\r\n   * @data: map of datetime string and price values floats, as:\r\n   *  {\r\n   *    \"01-01-1970 00:03:45\": 200.22,\r\n   *    \"01-02-1970 00:03:45\": 202.22,\r\n   *    ...\r\n   *  }\r\n   */\r\n  @call\r\n  addPrices(data) {\r\n    assert(\r\n      near.signerAccountId() === AUTHORIZED_CONTRACT,\r\n      `Account ${near.signerAccountId()} unathourized to add data to smart contract.`\r\n    );\r\n    const fdata = JSON.parse(data);\r\n    for (const datetimeString in fdata) {\r\n      const datetime = new Date(datetimeString);\r\n      this.near_prices.set(datetime, fdata[datetimeString]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a map of float prices indexed by datetime.\r\n   * @from_datetime: string of datetime in ISO format, e.g. \"2021-07-27T16:02:08.070557\"\r\n   * @return:\r\n   *  {\r\n   *     \"2021-07-27T16:02:08.000000\": {\r\n   *      \"ETH\": 122.22,\r\n   *      \"NEAR\": 20.11,\r\n   *      ...\r\n   *     },\r\n   *     \"2021-07-28T16:02:08.000000\": {\r\n   *      \"ETH\": 129.22,\r\n   *      \"NEAR\": 21.11,\r\n   *      ...\r\n   *     },\r\n   *     ...\r\n   *  }\r\n   */\r\n  @view\r\n  getPrices(from_datetime) {\r\n    assert(\r\n      from_datetime,\r\n      'from_datetime must be provided, e.g. \"2021-07-27T16:02:08.000000\"'\r\n    );\r\n    const fdatetime = new Date(from_datetime); // \"01-01-1970 00:03:45\" ->  1969-12-31T23:03:45.000Z\r\n    const result = new Map();\r\n    for (const datetime in this.prices) {\r\n        if (fdatetime <= datetime) {\r\n            result.set(datetime, this.prices[datetime]);\r\n        }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n"],"names":["assert","condition","message","Error","call","target","name","descriptor","view","NearBindgen","Class","OriginalClass","NewClass","args","deserializeArgs","ret","serialize","prototype","_get","Object","create","NearContract","deserialize","hasRead","env","jsvm_storage_read","state","read_register","assign","JSON","parse","jsvm_storage_write","stringify","jsvm_args","serializeReturn","signerAccountId","signer_account_id","AUTHORIZED_CONTRACT","Contract","constructor","near_prices","Map","addPrices","data","near","fdata","datetimeString","datetime","Date","set","getPrices","from_datetime","fdatetime","result","prices"],"mappings":"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"}